/* Grid system */

/* Generate semantic grid columns with these mixins. */

@mixin make-grid()
{
    box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);
    width: 100%;

    $gutter-x: $spacer;
    $gutter-y: 0;
    grid-template-rows: repeat($rows, 1fr);
    grid-template-columns: repeat($columns, 1fr);
    gap: $grid-gutter;
    grid-gap: $grid-gutter;
}


@mixin make-row()
{
    display: flex;
    flex-wrap: wrap;
    // TODO: Revisit calc order after https://github.com/react-bootstrap/react-bootstrap/issues/6039 is fixed

    margin-top: calc(-1 * $gutter-y); // stylelint-disable-line function-disallowed-list
    margin-right: calc(-.5 * $gutter-x); // stylelint-disable-line function-disallowed-list
    margin-left: calc(-.5 * $gutter-x); // stylelint-disable-line function-disallowed-list

    $gutter-x: $grid-gutter-width;
    $gutter-y: 0;
}

/* ##Columns generator## */
@mixin make-col()
{
    @each $breakpoint in $breakpoints
    {
        $infix: breakpoint-infix($breakpoint, $breakpoints);
        @include media-breakpoint-up($breakpoint, $breakpoints)
        {
            // Provide basic `.col-{bp}` classes for equal-width flexbox columns
            .col#{$infix}
            {
                flex: 1 0 0;

                @include grid-loop($name);
            }

            .row-cols#{$infix}-auto > *
            {
                @include make-col-auto();
            }

            // Gutters
            //
            // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.
            @each $key, $value in $gutters
            {
                .g#{$infix}-#{$key},
                .gx#{$infix}-#{$key}
                {
                    -#{$variable-prefix}gutter-x: #{$value};
                }

                .g#{$infix}-#{$key},
                .gy#{$infix}-#{$key}
                {
                    -#{$variable-prefix}gutter-y: #{$value};
                }
            }
        }
    }
}

@mixin make-col-offset($size, $columns: $grid-columns)
{
    margin-left: if($num == 0, 0, percentage($num));

    $num: divide($size, $columns);
}

/* Row columns */
/* Specify on a parent element(e.g., .row) to force immediate children into number of columns. Supports wrapping to new lines, but does not do a Masonry style grid. */
/* Row columns*/
/* Specify on a parent element(e.g., .row) to force immediate children into NN numberof columns. Supports wrapping to new lines, but does not do a Masonry
style grid.*/
@mixin row-cols
{
    float: left;

    padding-right: .75em;
    > *
    {
        flex: 0 0 auto;

        width: divide(100%, $count);
    }
}
