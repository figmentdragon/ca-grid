@use 'sass:map';

/******************************************************************
Site Name: The Creativity Architect
Author: CJM Termini

Stylesheet: CJMT Grid Stylesheet

Be light and don't over style since everything here will be
loaded by mobile devices. You want to keep it as minimal as
possible. This is called at the top of the main stylsheet
and will be used across all viewports.

******************************************************************/
$enable-caret: true;
$enable-rounded: true;
$enable-shadows: true;
$enable-gradients: true;
$enable-transitions: true;
$enable-reduced-motion: true;
$enable-smooth-scroll: true;
$enable-grid-classes: true;
$enable-container-classes: true;
$enable-cssgrid: true;
$enable-button-pointers: true;
$enable-rfs: true;
$enable-validation-icons: true;
$enable-negative-margins: true;
$enable-deprecation-messages: true;
$enable-important-utilities: true;

$include-column-box-sizing: true;
$variable-prefix: grid;

@import 'tools/grid-functions';

@import 'tools/grid-mixins';

@import 'variables/grid-variables';

@import 'tools/root';

@import 'tools/utils/utilities';

@import 'tools/grid-helpers';

@import
  'tools/utils/api';


/*********************
GENERAL STYLES
*********************/

html,
body
{
    font-size: 100%;

    top: 0;
    left: 0;

    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
}


[class^='container-']
{
    border-width: medium;
    border-style: solid;
    border-color: $active;
    border-radius: $border-radius;
}

.container
{
    @include make-container($gutter: $container-padding-x);
}

.container-fluid
{
    zoom: 1;

    padding-right: 20px;
    padding-left: 20px;

    @include make-container($gutter: $container-padding-x);

    .container-fluid:before,
    .container-fluid:after
    {
        line-height: 0;

        display: table;

        content: '';
    }
    &:after
    {
        clear: both;
    }
}


.grid
{
    @include make-grid();
    @include grid-loop($name);
    @include resp-min($breakpoint-sm)
    {
        grid-gap: div($base-unit, 2);
    }

    @each $breakpoint in $grid-breakpoints
    {
        $name: nth($breakpoint, 1);
        $declaration: nth($breakpoint, 2);

        @media only screen and ($declaration)
        {
            grid-template-columns: repeat($grid-columns,  1fr);
        }
    }
    > *
    {
        border-width: $border-width-md;
        border-style: solid;
        border-color: $gray-200;

        @include make-container($gutter: $container-padding-x);
    }
}

.row
{
    list-style: none;

    @include make-row;
    $gutter-x: $grid-gutter;
    $gutter-y: 0;

    &:not(.row-flex)
    {
        @include clearfix;
    }
    &.row-gutterless
    {
        margin-left: 0;
    }
    &.row-flex
    {
        display: inline-flex;
        flex-wrap: wrap;
    }
    &::after
    {
        display: table;
        clear: both;

        content: '';
    }
}

.row-fluid
{
    zoom: 1;

    width: 100%;

    &:before,
    &:after
    {
        line-height: 0;

        display: table;

        content: '';
    }
    &:after
    {
        clear: both;
    }
    [class^='col'] &
    {
        float: left;

        min-height: .125rem;
        margin: .5rem 2%;
    }
    [class*='span'] &
    {
        display: block;
        float: left;

        -webkit-box-sizing: border-box;
           -moz-box-sizing: border-box;
                box-sizing: border-box;
        width: 100%;
        min-height: 30px;
        margin-left: 2.564102564102564%;
        margin-left: 2.5109110747408616%;

        &:first-child
        {
            margin-left: 0;
        }
    }
    & .controls-row [class*='span'] + [class*='span']
    {
        margin-left: 2.564102564102564%;
    }
}


.col
{
    float: left;

    box-sizing: border-box;
    padding-left: $grid-gutter;

    @include make-col();
    .row-gutterless &
    {
        padding-left: 0;
    }
    & .row-cols-
    {
        @include row-cols;
    }
}
