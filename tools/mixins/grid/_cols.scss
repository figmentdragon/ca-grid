/* ##Columns generator## */



@mixin make-col-ready() {
  // Add box sizing if only the grid is loaded
  box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);
  // Prevent columns from becoming too narrow when at smaller grid tiers by
  // always setting `width: 100%;`. This works because we set the width
  // later on to override this initial width.
  flex-shrink: 0;
  width: 100%;
  max-width: 100%; // Prevent `.col-auto`, `.col` (& responsive variants) from breaking out the grid
  padding-right: calc($gutter-x * .5); // stylelint-disable-line function-disallowed-list
  padding-left: calc($gutter-x * .5); // stylelint-disable-line function-disallowed-list
  margin-top: $gutter-y;
}

@mixin make-col($size: false, $columns: $grid-columns) {
  @if $size {
    @for $i from 1 through $grid-columns {
      .col-#{$size}-#{$i} {
        width: calc(divide($width, $columns) * #{$i});
      }
    }
  } @else {
    flex: 1 1 0;
    max-width: 100%;
  }
}
@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: divide($size, $columns);
  margin-left: if($num == 0, 0, percentage($num));
}
@mixin make-col-auto() {
  flex: 0 0 auto;
  width: auto;
}
