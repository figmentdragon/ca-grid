/* Grid system */

/* Generate semantic grid columns with these mixins. */

@mixin make-grid()
{
    display: inline-grid;

    box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);
    width: 100%;
    height: 100%;

    $gutter-x: $spacer;
    $gutter-y: 0;
    grid-template-rows: repeat($grid-row-columns, 1fr);
    grid-template-columns: repeat($grid-columns, 1fr);
    gap: $grid-gutter;
    grid-gap: $grid-gutter;
}


@mixin grid-loop($name) {
  @include make-col-offset($size, $columns: $grid-columns);
  @for $width from 1 through $grid-columns{
    .col-#{$width} {
      flex-basis: calc(divide($width, $grid-columns) * 100);
    }
  }
  .row-flex {
    float:none;
    flex-basis: divide($width, $grid-columns);
    width: auto;
    max-width: 100%;
  }
}
