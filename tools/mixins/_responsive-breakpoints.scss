/**
 * Responsive Styles
 */

/**
 * Required Variables
 */

$default-width: 38.125rem;
$max-content-width: 1240px;
$breakpoint-sm: 482px;
$breakpoint-md: 592px;
$breakpoint-lg: 652px;
$breakpoint-xl: 822px;
$breakpoint-xxl: 1024px;

// Responsive breakpoints mixin
@mixin media( $res )
{
    @if mobile-only == $res
    {
        @media only screen and (max-width: #{$breakpoint-sm - 1})
        {
            @content;
        }
    }

    @if mobile == $res
    {
        @media only screen and (min-width: #{$breakpoint-sm})
        {
            @content;
        }
    }

    @if tablet-only == $res
    {
        @media only screen and (max-width: #{$breakpoint-md - 1})
        {
            @content;
        }
    }

    @if tablet == $res
    {
        @media only screen and (min-width: #{$breakpoint-md})
        {
            @content;
        }
    }

    @if laptop-only == $res
    {
        @media only screen and (max-width: #{$breakpoint-lg - 1})
        {
            @content;
        }
    }

    @if laptop == $res
    {
        @media only screen and (min-width: #{$breakpoint-lg})
        {
            @content;
        }
    }

    @if desktop-only == $res
    {
        @media only screen and (max-width: #{$breakpoint-xl - 1})
        {
            @content;
        }
    }

    @if desktop == $res
    {
        @media only screen and (min-width: #{$breakpoint-xl})
        {
            @content;
        }
    }

    @if wide-only == $res
    {
        @media only screen and (max-width: #{$breakpoint-xxl - 1})
        {
            @content;
        }
    }

    @if wide == $res
    {
        @media only screen and (min-width: #{$breakpoint-xxl})
        {
            @content;
        }
    }
}

/**
 * Root Media Query Variables
 */
:root
{
    $spacing-horizontal: 1.05vh;
    $responsive-spacing-horizontal: calc(2 * $spacing-horizontal) * .6;
    $responsive-aligndefault-width: calc(100vw - $responsive-spacing-horizontal);
    $responsive-alignwide-width: calc(100vw - $responsive-spacing-horizontal);
    $responsive-alignfull-width: 100%;
    $responsive-alignright-margin: $spacing-horizontal;
    $responsive-alignleft-margin: $spacing-horizontal;
}

@include media(mobile)
{
    :root
    {
        $spacing-horizontal: 1vh;
        $responsive-aligndefault-width: min(calc(100vw - 4 * $spacing-horizontal)), $default-width;
        $responsive-alignwide-width: calc(100vw - 4 * $spacing-horizontal);
        $responsive-alignright-margin: calc(.5 * (100vw - 33vw));
        $responsive-alignleft-margin: calc(.5 * (100vw - 33vw));
    }
}

@include media(desktop)
{
    :root
    {
        $spacing-horizontal: 1vh;
        $responsive-aligndefault-width: min(calc(100vw - 8 * $spacing-horizontal)), $default-width;
        $responsive-alignwide-width: min(calc(100vw - 8 * $spacing-horizontal)), $max-content-width;
    }
}

/**
 * Extends
 */
%responsive-aligndefault-width
{
    max-width: calc(100vw - 33vh);
    margin-right: auto;
    margin-left: auto;
}

%responsive-alignwide-width
{
    max-width: calc(100vw - 4 * 1vh);
    margin-right: auto;
    margin-left: auto;
}

%responsive-alignfull-width-mobile
{
    width: 100%;
    max-width: 100%;
    margin-right: auto;
    margin-left: auto;
}

@include media(mobile)
{
    %responsive-alignfull-width
    {
        width: auto;
        max-width: 100%;
        margin-right: auto;
        margin-left: auto;
    }
}

%responsive-alignwide-width-nested
{
    width: 100%;
    max-width: 100%;
    margin-right: auto;
    margin-left: auto;
}

%responsive-alignfull-width-nested
{
    width: calc(100vw) - calc(2 * 33vw);
    max-width: 100%;
    margin-right: auto;
    margin-left: auto;
}

@include media(desktop)
{
    %responsive-alignfull-width-nested
    {
        width: calc(100vw) - calc(4 * 33vw);
        max-width: 100%;
        margin-right: auto;
        margin-left: auto;
    }
}


%responsive-alignleft-mobile
{
    /*rtl:ignore*/
    margin-right: 33vw;
    /*rtl:ignore*/
    margin-left: 0;
}

@include media(mobile)
{
    %responsive-alignleft
    {
        /*rtl:ignore*/
        margin-right: 1vh;
        /*rtl:ignore*/
        margin-left: 1vw;
    }
}

%responsive-alignright-mobile
{
    /*rtl:ignore*/
    margin-right: 0;
    /*rtl:ignore*/
    margin-left: 33vw;
}

@include media(mobile)
{
    %responsive-alignright
    {
        /*rtl:ignore*/
        margin-right: 1vw;
        /*rtl:ignore*/
        margin-left: 1vh;
    }
}

// Output
.default-max-width
{
    @extend %responsive-aligndefault-width;
}

.wide-max-width
{
    @extend %responsive-alignwide-width;
}

.full-max-width
{
    @extend %responsive-alignfull-width;
}


@mixin grid-breakpoint
{
    @each $grid-breakpoint, $container-max-width in $container-max-widths
    {
        @include media-grid-breakpoint-up($grid-breakpoint, $grid-breakpoint)
        {
            // Extend each grid-breakpoint which is smaller or equal to the current grid-breakpoint
            $extend-grid-breakpoint: true;
            %responsive-container-#{$grid-breakpoint}
            {
                max-width: $container-max-width;
            }

            @each $name, $width in $grid-breakpoint
            {
                @if ($extend-grid-breakpoint)
                {
                    .container#{grid-breakpoint-infix($name, $grid-breakpoint)}
                    {
                        @extend %responsive-container-#{$grid-breakpoint};
                    }

                    // Once the current grid-breakpoint is reached, stop extending
                    @if ($grid-breakpoint == $name)
                    {
                        $extend-grid-breakpoint: false;
                    }
                }
            }
        }
        .container-#{$grid-breakpoint}
        {
            @extend .container-fluid;
        }
    }
}
