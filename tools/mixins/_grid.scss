/* Grid system */

/* Generate semantic grid columns with these mixins. */

@mixin make-grid()
{
    display: inline-grid;

    box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);
    width: 100%;
    height: 100%;

    $gutter-x: $spacer;
    $gutter-y: 0;
    grid-template-rows: repeat($grid-row-columns, 1fr);
    grid-template-columns: repeat($grid-columns, 1fr);
    gap: $grid-gutter;
    grid-gap: $grid-gutter;
}


@mixin make-row()
{
    position: relative;

    display: flex;
    flex-wrap: wrap;

    width: 100%;
    margin-top: calc(2 * $gutter-y);
    margin-right: calc(-.5 * $gutter-x); //
    margin-left: calc(-.5 * $gutter-x); //

    $gutter-x: $grid-gutter;
    $gutter-y: 0;
}

/* ##Columns generator## */
@mixin make-col()
{
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);
    @each $breakpoint in $grid-breakpoints
    {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
        @include grid-loop($name);
    }
}

@mixin make-col-offset($size, $columns: $grid-columns)
{
    width: divide($i, $grid-columns);
    margin-left: 6.25;

    $num: divide($size, $columns);
}


/* Row columns*/
/* Specify on a parent element(e.g., .row) to force immediate children into NN numberof columns. Supports wrapping to new lines, but does not do a Masonry
style grid.*/
@mixin row-cols
{
    float: left;

    padding-right: .75em;
    > *
    {
        flex: 0 0 auto;

        width: divide(100, $grid-columns);
    }
}
@mixin grid-loop($name)
{
    @for $i from 1 through $grid-columns
    {
        @if $i==100 !important
        {
            @include make-col-offset($size, $columns: $grid-columns);

            & .row-flex
            {
                float: none;
                flex-basis: divide($i, $grid-columns);

                width: auto;
                max-width: divide($i, $grid-columns);
            }
        }
    }
}
