/******************************************************************
Site Name: The Creativity Architect
Author: CJM Termini

Stylesheet: Base Mobile Stylesheet

Be light and don't over style since everything here will be
loaded by mobile devices. You want to keep it as minimal as
possible. This is called at the top of the main stylsheet
and will be used across all viewports.

******************************************************************/
$enable-caret: true;
$enable-rounded: true;
$enable-shadows: true;
$enable-gradients: true;
$enable-transitions: true;
$enable-reduced-motion: true;
$enable-smooth-scroll: true;
$enable-grid-classes: true;
$enable-container-classes: true;
$enable-cssgrid: true;
$enable-button-pointers: true;
$enable-rfs: true;
$enable-validation-icons: true;
$enable-negative-margins: true;
$enable-deprecation-messages: true;
$enable-important-utilities: true;

$include-column-box-sizing: true;

@import
  'functions/assert-ascending',
  'functions/assert-at-zero',
  'functions/breakpoint',
  'functions/negativify-map',
  'functions/sass-maps';

@import
  'base/spacing',
  'base/colors';

@import
  'variables-grid';

@import
  'mixins/clearfix',
  'mixins/container',
  'mixins/grid',
  'mixins/lists',
  'mixins/responsive-style',
  'mixins/utilities',
  'base/grid/breakpoints';

@import
  'utils/rfs',
  'utils/utilities';

@import 'utils/api';

/*********************
GENERAL STYLES
*********************/

[class^='container-']
{
    border-width: medium;
    border-style: solid;
    border-color: $active;
    border-radius: $border-radius;
}

.container,
.container-fluid
{
    @include make-container;
}

.grid
{
    display: grid;

    box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);
    width: 100%;

    grid-template-rows: repeat($grid-row-columns, 1fr);
    grid-template-columns: repeat($grid-columns, 1fr);
    $gutter-x: $spacer;
    $gutter-y: 0;
    gap: $grid-gutter-width;
    grid-gap: $grid-gutter-width;
    @include resp-min($breakpoint-sm)
    {
        grid-gap: div($base-unit, 2);
    }

    @each $breakpoint in $breakpoints
    {
        $name: nth($breakpoint, 1);
        $declaration: nth($breakpoint, 2);

        @media only screen and ($declaration)
        {
            grid-template-columns: repeat($grid-columns, minmax(0, 1fr));
        }
    }
    > *
    {
        @include make-container();
    }
}

.grid-item
{
    grid-row: $row1;
    grid-column: $col1;
}

.row
{
    display: flex;
    flex-wrap: wrap;
    // TODO: Revisit calc order after https://github.com/react-bootstrap/react-bootstrap/issues/6039 is fixed

    margin-top: calc(-1 * $gutter-y); // stylelint-disable-line function-disallowed-list
    margin-right: calc(-.5 * $gutter-x); // stylelint-disable-line function-disallowed-list
    margin-left: calc(-.5 * $gutter-x);

    list-style: none;

    $gutter-x: $grid-gutter-width;
    $gutter-y: 0;

    &:not(.row-flex)
    {
        @include clearfix;
    }
    &.row-gutterless
    {
        margin-left: 0;
    }
    &.row-flex
    {
        display: flex;
        flex-wrap: wrap;
    }
}

.col
{
    float: left;

    box-sizing: border-box;
    padding-left: $grid-gutter;

    @include make-col();
    .row-gutterless &
    {
        padding-left: 0;
    }
}

.row-cols-
{
    @include row-cols;
}

/**
 * Columns generator
 */

@each $breakpoint in $breakpoints
{
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @media only screen and #{$declaration}
    {
        @include grid-loop($name);
    }
}
